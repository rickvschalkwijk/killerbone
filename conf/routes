# HTTP methods: GET, POST, PUT, DELETE, HEAD

# Application
GET     /												controllers.Application.index()
GET		/eventful/repopulate							controllers.Application.repopulateEventfulContent()
GET     /assets/*file               					controllers.Assets.at(path="/public", file)

# Authentication
POST	/authenticate/api								controllers.Authentication.performApiAuthentication()
POST	/authenticate/admin								controllers.Authentication.performAdminAuthentication()

# Development
GET		/development/allusers							controllers.Development.getAllUsers()
GET		/development/allfriendships						controllers.Development.getAllFriendships()
GET		/development/allevents							controllers.Development.getAllEvents()
GET		/development/allcategories						controllers.Development.getAllCategories()
GET		/development/generate/dummydata					controllers.Development.generateDummyData()

#-----------------------------------------------------------------------------------------------------#

# API Event Manager
GET		/events											controllers.api.EventManager.getAllEvents()
GET		/events/new/:timestamp							controllers.api.EventManager.getNewEvents(timestamp : Long)
GET		/events/:category								controllers.api.EventManager.getAllEventsFromCategory(category : String)
GET		/events/:category/new/:timestamp				controllers.api.EventManager.getNewEventsFromCategory(category : String, timestamp : Long)
GET		/events/categories								controllers.api.EventManager.getAllCategories()

# API Friendship Manager
GET		/friendships/:userId							controllers.api.FriendshipManager.getUserFriendships(userId : Long)
POST	/friendship										controllers.api.FriendshipManager.createFriendship()
PUT		/friendship/:friendshipId/accept/:userId 		controllers.api.FriendshipManager.acceptFriendship(friendshipId : Long, userId : Long)
PUT		/friendship/:friendshipId/decline/:userId 		controllers.api.FriendshipManager.declineFriendship(friendshipId : Long, userId : Long)
PUT		/friendship/:friendshipId/end/:userId			controllers.api.FriendshipManager.endFriendship(friendshipId : Long, userId : Long)
PUT		/friendship/:friendshipId/location/:userId		controllers.api.FriendshipManager.shareLocationWithFriendship(friendshipId : Long, userId : Long)

# API User Manager
GET		/user/:userId									controllers.api.UserManager.getUser(userId : Long)
POST	/user											controllers.api.UserManager.createUser()
PUT		/user/:userId									controllers.api.UserManager.updateUser(userId : Long)
DELETE	/user/:userId									controllers.api.UserManager.deleteUser(userId : Long)

#-----------------------------------------------------------------------------------------------------#

# Admin Dashboard
GET		/admin											controllers.admin.Dashboard.index()
GET		/admin/login									controllers.admin.Dashboard.login()
GET		/admin/logout									controllers.admin.Dashboard.logout()

# Admin Event Management
GET		/admin/events									controllers.admin.EventManagement.index()

# Admin User Management
GET		/admin/users									controllers.admin.UserManagement.index(page: Integer ?= 1, orderBy: String ?= "", filter: String ?="")
GET		/admin/user/:userId								controllers.admin.UserManagement.displayUser(userId : Long)
POST	/admin/user/create								controllers.admin.UserManagement.createUser()
POST	/admin/user/:userId/update						controllers.admin.UserManagement.updateUser(userId : Long)
POST	/admin/user/:userId/delete						controllers.admin.UserManagement.deleteUser(userId : Long)
POST	/admin/user/:userId/resetPassword				controllers.admin.UserManagement.resetPassword(userId : Long)

# Admin System
GET		/admin/system									controllers.admin.System.index()

